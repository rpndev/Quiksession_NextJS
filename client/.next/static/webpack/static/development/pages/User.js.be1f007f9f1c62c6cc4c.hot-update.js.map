{"version":3,"file":"static/webpack/static\\development\\pages\\User.js.be1f007f9f1c62c6cc4c.hot-update.js","sources":["webpack:///./pages/User/index.js"],"sourcesContent":["import React, { useEffect, useState, createRef } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Link from \"next/link\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"../../components/user/Template/Navbars/Navbar.js\";\r\nimport Footer from \"../../components/user/Template/Footer/Footer.js\";\r\nimport Sidebar from \"../../components/user/Template/Sidebar/Sidebar.js\";\r\n\r\nimport mainRoutes from \"../../components/user/routes.js\";\r\n\r\nimport styles from \"../../components/user/assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\nimport bgImage from \"../../public/img/sidebar-2.jpg\";\r\nimport logo from \"../../public/img/reactlogo.png\";\r\n\r\nlet ps;\r\n\r\nconst switchRoutes = (routes) => (\r\n  <>\r\n    {/* {routes &&\r\n      routes.map((prop, key) => {\r\n        if (prop.layout === \"/User\") {\r\n          return <Link href={`/User/${prop.path}`} key={key} />;\r\n        }\r\n        return null;\r\n      })} */}\r\n  </>\r\n);\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function User({ ...rest }) {\r\n  const classes = useStyles();\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = createRef();\r\n  const [routes, setRoutes] = useState([]);\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  // const getRoute = () => {\r\n  //   if (window.location.pathname === \"/user/maps\") history.push(\"/StudiosMap\");\r\n  //   return window.location.pathname !== \"/user/maps\";\r\n  // };\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  const router = useRouter();\r\n  useEffect(() => {\r\n    const auth = JSON.parse(localStorage.getItem(\"auth\"));\r\n    if (auth && auth.user && auth.user.role) {\r\n      if (auth.user.role === \"owner\") {\r\n        setRoutes(mainRoutes[0]);\r\n      } else if (auth.user.role === \"artist\") setRoutes(mainRoutes[1]);\r\n    } else {\r\n      router.push(\"/login\");\r\n    }\r\n    // if (navigator.platform.indexOf(\"Win\") > -1) {\r\n    //   ps = new PerfectScrollbar(mainPanel.current, {\r\n    //     suppressScrollX: true,\r\n    //     suppressScrollY: false,\r\n    //   });\r\n    //   document.body.style.overflow = \"hidden\";\r\n    // }\r\n    // window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    // return function cleanup() {\r\n    //   if (navigator.platform.indexOf(\"Win\") > -1) {\r\n    //     ps.destroy();\r\n    //   }\r\n    //   window.removeEventListener(\"resize\", resizeFunction);\r\n    // };\r\n  }, [mainPanel]);\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {/* {getRoute() && ( */}\r\n      {/* <Sidebar\r\n        routes={routes}\r\n        logoText={\"Creative Tim\"}\r\n        logo={logo}\r\n        image={bgImage}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color=\"blue\"\r\n        {...rest}\r\n      /> */}\r\n      {/* )} */}\r\n\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          routes={routes}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          {...rest}\r\n        />\r\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n        {/* {getRoute() && ( */}\r\n        <div className={classes.content}>\r\n          <div className={classes.container}>{switchRoutes(routes)}</div>\r\n        </div>\r\n        {/* )} */}\r\n        {/* {getRoute() ? <Footer /> : null} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAWA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAcA;AAAA;AAAA;AAEA;AACA;AAFA;AAOA;AAAA;AACA;AAAA;AAOA;;;;A","sourceRoot":""}